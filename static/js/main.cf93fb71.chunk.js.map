{"version":3,"sources":["components/CalcSum.js","components/Button.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["CalcSum","useState","value1","setValue1","value2","setValue2","setTotal","type","value","onChange","e","target","required","Button","className","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLA0CeA,EAxCC,WAEd,MAA0BC,mBAAS,GAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAKG,EAAL,KAAaC,EAAb,KACA,EAAiBJ,mBAAS,GAArBK,EAAL,oBAcA,OACE,gCAEE,8DAEE,uBAAOC,KAAK,SAASC,MAAON,EAAQO,SAjBf,SAACC,GAC1BP,EAAUO,EAAEC,OAAOH,QAgBmDI,UAAQ,OAG5E,kGAEE,uBAAOL,KAAK,SAASC,MAAOJ,EAAQK,SAlBf,SAACC,GAC1BL,EAAUK,EAAEC,OAAOH,QAiBmDI,UAAQ,OAG5E,oEAEE,uBAAOL,KAAK,OAAOC,MAAON,EAASE,EAAQK,SAnBtB,SAACC,GAC1BJ,EAASJ,EAASE,IAkB2DQ,UAAQ,WC3B1EC,EARA,WACb,OACE,8BACE,wBAAQC,UAAU,MAAlB,qBCaSC,EAbA,WAEb,OACE,mCACE,sBAAKD,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,UCAOE,MARf,WACE,OACE,iCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cf93fb71.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst CalcSum = () => {\n  \n  let [value1, setValue1] = useState(0);\n  let [value2, setValue2] = useState(0);\n  let [setTotal] = useState(0);\n\n  const handleValue1Change = (e) => {\n    setValue1(e.target.value);\n  }\n\n  const handleValue2Change = (e) => {\n    setValue2(e.target.value);\n  }\n\n  const handleValue3Change = (e) => {\n    setTotal(value1 * value2);\n  }\n\n  return (\n    <div>\n\n      <label>\n        Цена:\n        <input type=\"number\" value={value1} onChange={handleValue1Change} required />\n      </label>\n\n      <label>\n        Количество:\n        <input type=\"number\" value={value2} onChange={handleValue2Change} required />\n      </label>\n\n      <label>\n        Сумма:\n        <input type=\"text\" value={value1 * value2} onChange={handleValue3Change} required />\n      </label>\n\n    </div>\n  );\n}\n\nexport default CalcSum;","const Button = () => {\n  return (\n    <div>\n      <button className=\"btn\">Send</button>\n    </div>\n  )\n}\n\nexport default Button;","import CalcSum from './CalcSum';\nimport Button from './Button';\n\nconst Header = () => {\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Test Task</h1>\n        <CalcSum />\n        <Button />\n      </div>\n    </>\n  );\n}\n\nexport default Header;","import Header from './components/Header'\n\nfunction App() {\n  return (\n    <header>\n      <Header />\n    </header>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}